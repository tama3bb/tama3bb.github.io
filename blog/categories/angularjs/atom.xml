<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: AngularJS | AngularJS Ninja]]></title>
  <link href="http://angularjsninja.com/blog/categories/angularjs/atom.xml" rel="self"/>
  <link href="http://angularjsninja.com/"/>
  <updated>2015-01-15T19:25:59+09:00</updated>
  <id>http://angularjsninja.com/</id>
  <author>
    <name><![CDATA[Akihito Tamagawa]]></name>
    <email><![CDATA[tama3bb@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Angular 1.4.0 は 2015 年の春にリリース]]></title>
    <link href="http://angularjsninja.com/blog/2014/12/16/planning-angular-1.4/"/>
    <updated>2014-12-16T12:06:25+09:00</updated>
    <id>http://angularjsninja.com/blog/2014/12/16/planning-angular-1.4</id>
    <content type="html"><![CDATA[<p>AngularJS 1.4.0 のリリースは来春 2015 年 3 月頃になるようですね。</p>

<p>公式ブログの記事『<a href="http://angularjs.blogspot.jp/2014/12/planning-angular-14.html">Planning Angular 1.4</a>』を日本語訳しておきました。</p>

<hr />

<h2>Planning Angular 1.4</h2>

<p>AngularJS 1.4 についてのミーティングを先週実施し、その概要をまとめています。ミーティングの映像は YouTube でご覧いただけます。</p>

<h3>Release Schedule</h3>

<p>最初のリリースとなる 1.4.0 を、2015 年 3 月 5 日の <a href="http://www.ng-conf.org/">ng-conf</a> にあわせて、2015 年の春を予定しています。1.3.x は継続的にリリースしていきます。</p>

<h3>Work Planning</h3>

<p>GitHub でコミュニティの関心が高い issues と PRs から、1.4 への提案機能のリスト <a href="https://docs.google.com/spreadsheets/d/1ihM8ORf8v38qAbnzJM4TiCqdKeCRz_1VO9JPjSpPWKU/edit?usp=sharing">spreadsheet</a> を Lucas が作成しました。大きな機能や、重大な変更 (breaking changes)、新しい API について記載しています。ミーティングの大半の時間は、これらの機能について Angular 1.x で対応すべきか、どのリリースにするか、誰が担当するかについて話し合いました。</p>

<h3>1.4 Targets</h3>

<p>1.4 で予定している機能について <a href="https://docs.google.com/spreadsheets/d/1F4JmM25GeaVWLv7oaJrmfFZoE8ioepqNZQKd6xx_Jc4/edit?usp=sharing">tracking spreadsheet</a> を作成しています。</p>

<p>1.4 の主要なテーマは以下のとおりです。</p>

<ul>
<li><strong>Router</strong> &ndash; <em>Brian</em> &ndash; Angular 1 と 2 で対応する新しい router &ndash; <a href="https://docs.google.com/document/d/1-DBXTHaeec6XH5qx2tKVrgrjiILy76_lSrjgJv95RJ4/edit#">Progress</a></li>
<li><strong>I18N</strong> &ndash; <em>Chirayu</em> &ndash; ファーストクラスの国際化対応 &ndash; <a href="https://docs.google.com/document/d/1mwyOFsAD-bPoXTk3Hthq0CAcGXCUw-BtTJMR4nGTY-0/edit?usp=sharing">Design Doc</a></li>
<li><strong>Forms</strong> &ndash; <em>Martin</em> &ndash; 簡単に使えて保守性の高い parsing / formatting / validation &ndash; <a href="https://drive.google.com/open?id=1-MhomULgCFOXVsqAGrI7l-cXYMYmJM4BMzgy_anC93o&amp;authuser=0">Design Doc</a></li>
<li><strong>HTTP</strong> &ndash; <em>Pawel</em> &ndash; <code>$http</code> サービスの改善 (serialization, JSON parsing, testing mock DSL)</li>
<li><strong>Parser</strong> &ndash; <em>Lucas</em> &ndash; <code>$parse</code> サービスのパフォーマンス改善</li>
<li><strong>Documentation</strong> &ndash; <em>Caitlin</em> &ndash; Material Design を使ってドキュメントのデザインを再設計</li>
</ul>


<p>加えて、以下の重要または重大な変更 (breaking changes) を含めることを計画しています。</p>

<ul>
<li><strong><code>$injector</code></strong> &ndash; <em>Brian</em> &ndash; module を再定義しているとエラーを投げることで、バグを早期に発見 (<a href="https://github.com/angular/angular.js/issues/1779">#1779</a>)</li>
<li><strong><code>$compile</code></strong> &ndash; <em>Igor</em> &ndash; より簡単にコンポーネントタイプの directive を定義するために、新しく module.component ヘルパーを提供 (<a href="https://github.com/angular/angular.js/issues/10007">#10007</a>)</li>
<li><strong><code>$compile</code></strong> &ndash; <em>Caitlin</em> &ndash; オプショナルでない isolated scope のマッピングに対応する属性を記述漏れしているとエラーを投げる (<a href="https://github.com/angular/angular.js/pull/9216">#9216</a>)</li>
<li><strong>Project layout / Modularity</strong> &ndash; <em>Pete</em> &ndash; angular.js をさらに小さなオプショナルのモジュール／ファイルに分割し、ノンオプショナルなコアのファイルサイズを小さくする（モバイルのユースケースで有益）</li>
</ul>


<!-- more -->


<h2>Github Milestones and Labels</h2>

<p>master ブランチでの 1.4.x の開発を開始します。進行中の開発用に新しい labels と milestones があります。</p>

<p><em>Milestones:</em></p>

<ul>
<li>1.4.x &ndash; 1.4 で計画されている issues と pull requests 用</li>
</ul>


<p><em>Labels:</em></p>

<ul>
<li>branch: 1.2.x (replaces stable: yes)</li>
<li>branch: 1.3.x (replaces stable: no)</li>
<li>branch: 1.4.x (replaces 1.4 &ndash; for triaging 1.4.x issues and PRs)</li>
<li>Primary Focus: (new for items that we are focusing on for 1.4 &ndash; i.e. the stuff in the tracking spreadsheet)</li>
</ul>


<h2>Other Versions and Backporting</h2>

<ul>
<li>master ブランチ (1.4.x) はフォーカスの大部分を受け取る</li>
<li>1.3.x ブランチはマスターからバックポートしたバージョン特有の修正を受け取る</li>
<li>1.2.x ブランチはセキュリティの問題と重要なリグレッションの修正のみ受け取る</li>
</ul>


<h2>Video</h2>

<p>設計と開発について透明かつオープンであるための継続的な活動として、このミーティングの録画を公開しています。<a href="https://www.youtube.com/watch?v=Uae9_8aFo-o">https://www.youtube.com/watch?v=Uae9_8aFo-o</a></p>

<iframe width="560" height="315" src="http://angularjsninja.com//www.youtube.com/embed/Uae9_8aFo-o?rel=0" frameborder="0" allowfullscreen></iframe>


<h2>Just the Beginning</h2>

<p>1.4 の計画はまだ始まったばかりです。上述した概要に加えて、GitHub で 1.4 への追加提案を歓迎しています。1.4.0 をリリース後は、1.4.0 で入らなかった non-breaking な変更のために 1.4.x のリリースを継続していきます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[（日本語訳）ng-europe, Angular 1.3, and beyond]]></title>
    <link href="http://angularjsninja.com/blog/2014/10/28/ngeurope-angular1.3-and-beyond-in-japanese/"/>
    <updated>2014-10-28T16:12:47+09:00</updated>
    <id>http://angularjsninja.com/blog/2014/10/28/ngeurope-angular1.3-and-beyond-in-japanese</id>
    <content type="html"><![CDATA[<p>AngularJS 公式ブログの記事 <a href="http://angularjs.blogspot.jp/2014/10/ng-europe-angular-13-and-beyond.html">ng-europe, Angular 1.3, and beyond</a> を日本語訳しておきました。</p>

<hr />

<p>先週、パリで開催した <a href="http://ngeurope.org">ng-europe</a> において、Angular の過去、現在、そして未来について発表しました。このブログポストでは、重要なポイントとお知らせについてまとめています。</p>

<h2>Angular 1.3</h2>

<p>リリースしたばかりの新しい AngularJS 1.3 では、AngularJS 1.2 には無かった多くの機能と改善が含まれています。</p>

<ul>
<li>パフォーマンス：DOM 操作や digest など多くの処理が 3 &ndash; 4 倍高速化し、アプリケーションが軽快に動作します。</li>
<li>フォーム：シンプルな API となり、フォームバリデーションのコードを短く記述できます。</li>
<li>ARIA サポート：<a href="https://docs.angularjs.org/api/ngAria">ngAria</a> により、スクリーンリーダーなどの支援ソフトウェアをサポートする適切な ARIA 属性を追加・削除できます。</li>
<li>Material Design：ユーザインターフェイスデザインとインタラクションのための <a href="http://www.google.com/design/spec/material-design/introduction.html">Google&rsquo;s specification</a> をほぼ完全に機能するよう実装しています。詳しくは <a href="https://material.angularjs.org">material.angularjs.org</a> で。</li>
</ul>


<p>Web アプリケーションを実装しているなら、このバージョンを使ってください。Angular 1.x で構築された Google の 1,600 を超えるアプリケーションで、長期間にわたってこのバージョンを最上位としてサポートしていくことをコミットしています。</p>

<p>Angular 1.x で予定していた新機能と breaking changes については、一部の例外を除いて 2.0 に先送りし、新しい設計をベースに取り組んでいきます。PRs（プルリクエスト）のレビューと issues への返答を続けてはいますが、1.x については、機能よりも安定性、セキュリティ、性能をより重視していきます。</p>

<p>Angular 1.2 をお使いであれば、コードを 1.3 に移行する方法について <a href="https://docs.angularjs.org/guide/migration">migration instructions</a>（<a href="http://angularjsninja.com/blog/2014/10/15/migrating-from-1.2-to-1.3-in-Japanese/">日本語</a>）を確認してください。</p>

<!-- more -->


<h2>From 1.3 to 2.0: Angular&rsquo;s Next Step</h2>

<p>1 月に開催した <a href="http://ng-conf.org">ng-conf</a> の <a href="https://www.youtube.com/watch?v=r1A1VR0ibIQ">keynote</a> で、Angular 2 の計画について発表しました。それ以降の数か月にわたり、Angular にとっての次の進化となるステップについてブレインストーミングを繰り返してきました。3 月には<a href="http://angularjs.blogspot.jp/2014/03/angular-20.html">デザインドキュメントで考えを発表</a>し、フィードバックから Angular がどう使われ、どう使いたいと考えられているかを確認し、様々なアプローチ、プロトタイプ、ベンチマーク、デザインを繰り返し、ベストを求めてきました。</p>

<p>先週の <a href="http://ngeurope.org">ng-europe</a> の場で、このリサーチとプロトタイプによる Angular 2.0 のビジョンについて発表し、Angular が本物の Angular（DI、HTML ベースのテンプレート、ディレクティブ、テスタビリティ）となることを見ていただけたと思います。一方で、Angular を近年の Web プラットフォームのシフト（web components や module system など）に適用させ、Angular を著しく高速化して使いやすくするためには、1.x からの段階的なステップでは実現できず、それに伴うデザイン変更が生じることも見ていただきました。</p>

<p>具体的な変更点：</p>

<ul>
<li>Angular 1.x の controllers と templates を包含する統一されたコンポーネントモデルにより、概念 (concepts) と定型 (boilerplate) を減らして再利用性を高める。</li>
<li>scope の概念を見直してシンプルでわかりやすくし、コンポーネント間の責任分担を改善。</li>
<li>モジュール化されたモバイルファーストなデザインで、エンタープライズレベルのデスクトップアプリケーションのニーズまでスケール。 &ndash; 世界人口の 50 % を超える人々が、デスクトップではなくモバイルでインターネットに接続しており、モバイル向けのアプリケーションを開発しやすくしたいと考えています。一方で、エンタープライズ分野ではデスクトップ Web アプリケーションの重要性も残り続けます。</li>
<li>Web Components サポート。1.x での Web プラットフォームについての前提はもはや有効ではなく、対応させるために Angular を変更していきます。</li>
<li>ES6 (with easy transpilation to ES5) で構築。つまり、現在のブラウザで未来の JavaScript のコードを書き始めることができます。あるいは、ES5 で Angular 2 アプリケーションを実装することもできます。</li>
<li><a href="https://docs.google.com/presentation/d/1hr2IM-8G-0RzpB-WY8pLHvxqNggKPzUO0KvEv1IKPws/edit#slide=id.p">AtScript を導入</a>。TypeScript シンタックスと ES6 を拡張し、実行時の型とアノテーションを追加することで、大きなチームが大規模なアプリケーションを構築し、ドキュメント化することを支援します。ES6 と同じように、アプリケーションの構築に AtScript は必須ではありません。</li>
<li>Angular は jqLite や DOM ラッパーに依存しない。DOM は 2009 年以来大幅に改善しており、AngularJS がラッパーに依存する必要はなく、ラッパーを無くすことでパフォーマンスも向上します。必要であればディレクティブに jQuery や他の DOM ライブラリを使うこともできます。</li>
</ul>


<p>これらのアイデアの多くは、Angular 開発者との<a href="https://drive.google.com/#folders/0B7Ovm8bUYiUDR29iSkEyMk5pVUk">ディスカッション</a>によるもので、ディスカッションに加わってくださった開発者の方々にあらためて感謝します！ 安定と性能を重視した <a href="http://angularjs.blogspot.jp/2014/10/angularjs-130-superluminal-nudge.html">AngularJS 1.3 をリリース</a>（<a href="http://angularjsninja.com/blog/2014/10/14/angularjs-1.3.0-released/">日本語</a>）した今、Angular 2.0 の構築に向けて進んでいきます。</p>

<h2>What does this mean for me?</h2>

<p>Angular コミュニティこそが、Angular を素晴らしいものにしています。2.0 の計画を早期に共有することで、コンセプトから実際のコードにしていくためのディスカッションに、多くの方々が参加していただけるようにしています。開発者の方々からの協力を必要としており、考えをお伺いできることを楽しみにしています。GitHub で issues を発行していただくか、Twitter (<a href="https://twitter.com/bradlygreen">Brad</a>, <a href="https://twitter.com/IgorMinar">Igor</a>, <a href="https://twitter.com/briantford">Brian</a>, <a href="https://twitter.com/jeffbcross">Jeff</a>) や <a href="https://plus.google.com/+AngularJS/posts">Google+</a> でご連絡ください。ミートアップにお越しいただいたり、<a href="https://drive.google.com/#folders/0BxgtL8yFJbacMEZDc2NtWS1VZ1k">ミーティングノート</a>のフォロー・コメントもお願いします。</p>

<h2>When can I use Angular 2.0?</h2>

<p>現在の実験的な状態にある Angular 2.0 であれば、<a href="http://github.com/angular/angular">GitHub</a> と<a href="https://drive.google.com/#folders/0BxgtL8yFJbacMEZDc2NtWS1VZ1k">ミーティングノート</a>でフォローしていただけます。2.0 のコードで何かを構築するには早すぎ、プロジェクトはまだ本当に初期の段階です。まだリリース日を発表できるような状態ではありませんが、初期のバージョンを少しでも早くリリースできるよう進めています。</p>

<h2>How can I learn more about Angular 2.0?</h2>

<p>まだ非常に初期の段階ですが、まず ng-europe (<a href="https://twitter.com/ngEurope/status/525966523496955904">when they are available</a>) のビデオを見ていただくことから始められるのが一番です。特に、2 日間それぞれの Keynote と、Angular 2 Core のセッションです。</p>

<p>時間を掛けて、より深い内容を見ていただけるなら、すべての<a href="https://drive.google.com/#folders/0B7Ovm8bUYiUDR29iSkEyMk5pVUk">デザインドキュメントとリサーチ</a>に目を通してみてください。</p>

<p>コードは GitHub の <a href="https://github.com/angular/angular">angular/angular</a> リポジトリにありますが、まだ初期の段階であり、数か月のうちに続々と増えていくことになります。</p>

<p>最後に、パートナーによって公開されているリソースについても確認してください。ES6 と Angular 2.0 についての <a href="http://blogs.msdn.com/b/typescript/archive/2014/10/22/typescript-and-the-road-to-2-0.aspx">TypeScript のブログ記事</a>や、<a href="https://github.com/google/traceur-compiler">Traceur</a>、<a href="http://wiki.ecmascript.org/doku.php?id=harmony:specification_drafts">EcmaScript 6</a>、<a href="http://webcomponents.org/">Web Components</a> です。</p>

<h2>What about Migrating from 1.3 to 2.0?</h2>

<p>Angular 2 のゴールは、既存 API との後方互換性に縛られることなく、Web アプリケーションを構築するための最高のツールセットにすることです。Angular 2 の最初のバージョンに合わせて、Angular 1 ベースのアプリケーションからの移行パスについての作業を始めます。</p>

<p>Angular で Web アプリケーションを実装するために、たくさんの時間を投資して学習してくださっていることを知っています。核となる概念のほとんどを維持していきますので、Angular 2 においても同じ知識を活かして短期間で熟練していただけます。</p>

<h2>What&rsquo;s next?</h2>

<p>ng-europe は Angular コミュニティにとって素晴らしいイベントでした。プレゼンテーションやデモは素晴らしく、またそれ以上に、通路などで交わされたすべてのインフォーマルな会話が大切なものでした。そして今、発表したアイデアをリアルなものとしていくために、<a href="https://github.com/angular/angular/">ご参加ください</a>。2.0 が開発中の間は、Angular 1.3 で素晴らしいアプリケーションを構築してください。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AngularJS カンファレンス（ng-europe 2014）のスライドまとめ]]></title>
    <link href="http://angularjsninja.com/blog/2014/10/24/slides-at-ngeurope-2014/"/>
    <updated>2014-10-24T10:05:33+09:00</updated>
    <id>http://angularjsninja.com/blog/2014/10/24/slides-at-ngeurope-2014</id>
    <content type="html"><![CDATA[<h2>Slides at ng-europe 2014</h2>

<p>10/22 〜 10/23 に、パリ（フランス）で AngularJS のカンファレンス <a href="http://ngeurope.org">ng-europe</a> が開催されていました。</p>

<p>捕捉できたスライドについてはリンクしています。抜けが多いですが、スライドを捕捉できしだい追加していきます。</p>

<h3>WEDNESDAY OCTOBER 22nd</h3>

<p>Igor Minar &amp; Brad Green &ndash; <a href="https://docs.google.com/presentation/d/1-M5U0B6JI2JKU2ibVmU-xKkR7a88Uz1ZN0pc2lEuGzE/edit#slide=id.p">Keynote</a></p>

<p>Jeff Cross &amp; Brian Ford &ndash; <a href="https://drive.google.com/file/d/0Bw6GBXhPGkUGcEVuQlFMQklnUTA/view">Angular 1.3</a></p>

<p>Andrew Joslin &ndash; Ionic Framework</p>

<p>Victor Berchet &amp; Rado Kirov &ndash; <a href="https://docs.google.com/presentation/d/1qKoCrd7YgwsRPT8z2e8ahsY-JZkP6-cXPfbDSLz_HgQ/pub?start=false&amp;loop=false&amp;delayms=3000&amp;slide=id.p">AngularDart under the hood</a></p>

<p>Vojta Jína &ndash; <a href="https://dl.dropboxusercontent.com/u/36607830/talks/2014-can-we-learn-from%20architects.pdf">Can We Learn from Architects?</a></p>

<p>Julien Bouquillon &ndash; <a href="http://blog.revolunet.com/ngeurope-angular-cordova/#1">Using AngularJS and Phonegap to build hybrid mobile applications</a></p>

<p>Thomas Burleson &amp; Max Lynch &ndash; <a href="http://angular-material.slides.com/tburleson/introducing-angular-material-design">Material Design</a></p>

<p>Pete Bacon Darwin &ndash; <a href="https://docs.google.com/presentation/d/10ROq66kEpcB8eEgSYxmzUB82Ydt2oS2kaO-sNodEMoY/pub?start=false&amp;loop=false&amp;delayms=3000&amp;slide=id.p">Dgeni &ndash; Documentation generation on steroids</a></p>

<p>Julie Ralph &amp; Chirayu Krishnappa &ndash; <a href="https://docs.google.com/presentation/d/1ITWsMDGd6ArrP6KbGRLLzS9f9NMnyqozIdjtaj0Ek2c/edit#slide=id.p">Protractor and the Testability API</a></p>

<p>Rob Eisenberg &ndash; <a href="http://www.slideshare.net/RobEisenberg/ngeurope-the-new-router">The new Router for AngularJS</a></p>

<p>Pawel Kozlowski &ndash; <a href="http://pkozlowski-opensource.github.io/ng-europe-2014/presentation/">ui-bootstrap</a></p>

<p>Matthieu Lux &ndash; <a href="https://github.com/Swiip/angular-from-scratch">Angular from scratch</a></p>

<p>Oliver Dore &ndash; <a href="http://www.slideshare.net/workandco/vx-ng-europe">Responsive Takes Flight: Building The First Responsive Airline Website</a></p>

<h3>WEDNESDAY OCTOBER 23rd</h3>

<p>Miško Hevery &ndash; <a href="https://docs.google.com/presentation/d/1hr2IM-8G-0RzpB-WY8pLHvxqNggKPzUO0KvEv1IKPws/mobilepresent?slide=id.g3e58cc2be_3300">Keynote</a></p>

<p>Igor Minar &amp; Tobias Bosch &ndash; <a href="https://docs.google.com/presentation/d/1XQP0_NTzCUcFweauLlkZpbbhNVYbYy156oD--KLmXsk/edit#slide=id.p">Angular 2.0 Core</a></p>

<p>Zack Brown &ndash; <a href="http://thomasstreet.com/ngeurope/">Famous Angular</a></p>

<p>Douglas Duteil &ndash; <a href="https://docs.google.com/presentation/d/1W-0qR2LDmdeAv_3uGC1w6HyB-8Zc6ANwx1WM5wJrsx0/edit#slide=id.g4e26e863f_179">Yet another way to animate in Angular</a></p>

<p>Martin Gontovnikas &ndash; <a href="http://mgonto.github.io/restangular20-ngeurope-talk/">Restangular 2.0: The future and beyond</a></p>

<p>Erik Arvidsson &amp; Vojta Jína &ndash; <a href="http://arv.github.io/ngeurope/#/">ES6 in Angular 2.0</a></p>

<p>Matias Niemelä &ndash; Animations (sequencer, web animations)</p>

<p>Lukas Ruebbelke &ndash; <a href="http://onehungrymind.com/slides/realtime-cage-dragon-with-firebase-angularjs-google.pdf">Be a Real Time Cage Dragon with AngularJS and Firebase</a></p>

<p>Carmen Popoviciu &amp; Pascal Precht &ndash; <a href="http://slidedeck.io/PascalPrecht/dont-stop-thinking-about-tomorrow">“Don’t stop thinking about tomorrow” &ndash; AngularJS and Web Components</a></p>

<p>Marcy Sutton &ndash; <a href="http://marcysutton.github.io/angular-a11y/#/">AngularJS Accessibility</a></p>

<p>Jeremy Elbourn &ndash; <a href="https://docs.google.com/presentation/d/1eOL6ZaT-WqqC5q5D_uwE2EJxKmdWmfmXkkD4T47iYHk/edit#slide=id.g4e203762d_065">Software Patterns and Design with AngularJS</a></p>

<p>Dave Smith &ndash; <a href="http://slides.com/djsmith/the-power-of-angular-q/#/">The Power of $q</a></p>

<p>Matias Woloski &amp; Martin Gontovnikas &ndash; <a href="https://speakerdeck.com/mgonto/make-your-spa-a-maximum-security-prison">Making your Angular app a maximum security prision</a></p>

<p>Ari Lerner &ndash; Building games with AngularJS</p>

<p>Brian Ford &ndash; <a href="https://docs.google.com/presentation/d/16RJPOvWMePMTkvDrugOakV9uyGFRMd3PZ3g5UofhfIY/edit#slide=id.p">Tooling</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AngularJS 1.3 新機能 ngModelOptions]]></title>
    <link href="http://angularjsninja.com/blog/2014/10/17/angularjs-1.3-ngmodeloptions/"/>
    <updated>2014-10-17T18:57:38+09:00</updated>
    <id>http://angularjsninja.com/blog/2014/10/17/angularjs-1.3-ngmodeloptions</id>
    <content type="html"><![CDATA[<p><a href="/blog/2014/10/14/angularjs-1.3.0-released/">AngularJS 1.3.0</a> で導入された新機能から、ng-model でのモデル更新を調整できる directive の <a href="https://docs.angularjs.org/api/ng/directive/ngModelOptions">ngModelOptions</a> について取り上げます。</p>

<h2>ngModelOptions</h2>

<p>すぐに覚えて使ってみるべきオプションは、<code>updateOn</code> と <code>debounce</code> ですね。</p>

<h3>updateOn</h3>

<p><code>updateOn</code> は、input などの UI に対するどのイベントの場合にモデルを更新するかを指定できます。</p>

<p>``` javascript
&lt;input type=&ldquo;text&rdquo; name=&ldquo;userName&rdquo;</p>

<pre><code>ng-model="user.name"
ng-model-options="{ updateOn: 'blur' }"&gt;
</code></pre>

<p>```</p>

<p>これで、blur（フォーカスが外れる）イベントまでは、この input で入力値を変更してもモデルに反映されなくなります。blur イベントではじめてモデル更新されます。</p>

<h3>debounce</h3>

<p><code>debounce</code> は、モデルの更新を待機しておく時間を、ミリ秒単位で指定できます。</p>

<p>``` javascript
&lt;input type=&ldquo;text&rdquo; name=&ldquo;userName&rdquo;</p>

<pre><code>ng-model="user.name"
ng-model-options="{ debounce: 1000 }"&gt;
</code></pre>

<p>```</p>

<p>これで、変更から 1 秒（1,000 ミリ秒）経過後にモデルが更新されるようになります。変更から 1 秒経過するまでに別の変更があった場合には、待機中の更新処理は破棄されます。</p>

<!-- more -->


<h3>複数オプションの指定</h3>

<p>ngModelOptions は、以下のように複数のオプションを一度に指定できます。この指定は、モデル更新を 500 ミリ秒遅延させるが、blur イベントのみすぐに更新という意味になります。</p>

<p><code>javascript
ng-model-options="{ updateOn: 'default blur', debounce: {'default': 500, 'blur': 0} }"
</code></p>

<h3>使用上の注意</h3>

<p>ngModelOptions で <code>updateOn</code> や <code>debounce</code> を利用すると、input フィールドの入力値と、実際のモデルの値が異なっている状態が増えます。そのため、モデルのほうを変更するときには、関係する input フィールドに対して <code>$rollbackViewValue</code> を呼び出すことで、モデルの値と一致させ、遅延されている更新処理をキャンセルさせます。</p>

<p><code>$rollbackViewValue</code> function は、userForm.userName.$rollbackViewValue() のように参照して呼び出せます。</p>

<h3>submit イベントで更新完了</h3>

<p>待機中の更新処理は、<code>submit</code> イベントによって即座に実行されます。<code>ngClick</code> イベントはモデル更新前となるので、更新後のモデルにアクセスしたい場合には <code>ngSubmit</code> を利用します。</p>

<h3>ngModelOptions は子孫要素にも適用</h3>

<p>ngModelOptions は、input 要素に直接指定するだけでなく、祖先要素となる <code>form</code> などに指定することもできます。</p>

<h3>その他のオプション</h3>

<ul>
<li><code>allowInvalid</code></li>
</ul>


<p>invalid なモデル値を許容するか、undefined（デフォルト動作）にするかを boolean で指定。</p>

<ul>
<li><code>getterSetter</code></li>
</ul>


<p>getters/setters として <code>ngModel</code> に function をバインドするかを boolean で指定。</p>

<ul>
<li><code>timezone</code></li>
</ul>


<p><code>&lt;input type="date"&gt;</code> <code>&lt;input type="time"&gt;</code> の Date インスタンスを読み書きするときに利用するタイムゾーンを指定する。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AngularJS 1.3 新機能 ワンタイムバインディング]]></title>
    <link href="http://angularjsninja.com/blog/2014/10/16/angularjs-1.3-one-time-binding/"/>
    <updated>2014-10-16T08:40:32+09:00</updated>
    <id>http://angularjsninja.com/blog/2014/10/16/angularjs-1.3-one-time-binding</id>
    <content type="html"><![CDATA[<p><a href="/blog/2014/10/14/angularjs-1.3.0-released/">AngularJS 1.3.0</a> で導入された新機能から、ワンタイムバインディング (<a href="https://docs.angularjs.org/guide/expression#one-time-binding">One-time binding</a>) について取り上げます。</p>

<h2>One-time binding</h2>

<p>値が変わることのないデータまでも双方向データバインドされて、digest loop のたびに繰り返し変更監視されることで性能が劣化しやすかった大規模な AngularJS アプリケーションでの問題を解消できます。</p>

<p>1 回で使い捨てするデータバインドを定義できるようになり、監視 (watch) 対象を減らして digest loop を高速化し、アプリケーションの表示や操作の応答速度を高められる機能です。</p>

<p>One-time binding を指定すると、undefined のままである間は監視対象となり続け、digest loop の結果 undefined でなくなった時点で監視対象から外れます。null となった場合でも監視対象から外れます。</p>

<h4>使い方</h4>

<p><code>::</code> を付けるだけです。</p>

<!-- more -->


<p>
``` javascript
// {{ &hellip; }} の例
{{::user.name}}</p>

<p>// 属性の例</p>

<p><div ng-bind="::user.name"></p>

<p>// ng-repeat の例
<li ng-repeat="result in ::results">{{::result.title}}</li>
```
</p>

<p>ng-repeat への指定は配列に対して有効であって、配列に格納されているオブジェクトのプロパティ個々に対しては、それぞれで必要に応じて <code></code> などと one-time binding を指定することになります。</p>

<h2>Bindonce</h2>

<p>「そもそもこういう性能改善系の機能こそ JavaScript の実行速度が遅い IE 8 でこそ必要なのに、AngularJS 1.3 では IE 8 サポートがドロップされたし…。IE 8 をサポートしなきゃいけない自分には AngularJS 1.3 リリースなんかで盛り上がれやしないよ！」</p>

<p>とお嘆きのあなたには、<a href="https://github.com/Pasvaz/bindonce">Bindonce</a> です！</p>

<p>しばらく IE 8 をサポートし続けていくのであれば、この Bindonce の導入を検討しましょう。AngularJS 1.3.0 の新機能 One-time binding と同じように性能を改善できます。</p>

<h4>使い方</h4>

<p><code>bindonce.js</code> (<code>bindonce.min.js</code>) ファイルを読み込み、<code>angular.module('app', ['pasvaz.bindonce'])</code> というように <code>'pasvaz.bindonce'</code> を依存モジュールとして定義し、以下のようにコードを記述して使います。</p>

<p>``` javascript
<ul>
  <li bindonce ng-repeat="person in Persons"></p>

<pre><code>&lt;a bo-href="'#/people/' + person.id"&gt;&lt;img bo-src="person.imageUrl"&gt;&lt;/a&gt;
&lt;a bo-href="'#/people/' + person.id" bo-text="person.name"&gt;&lt;/a&gt;
&lt;p bo-class="{'cycled':person.generated}" bo-html="person.description"&gt;&lt;/p&gt;
</code></pre>

<p>  </li>
</ul>
<code>``
</code>bindonce<code>とか、</code>bo-*` で始まる directive に注目してください。</p>
]]></content>
  </entry>
  
</feed>
